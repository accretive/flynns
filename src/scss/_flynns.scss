
// The parent container. No position definitions are allowed between this
// class, and the player frame so that we can use position: absolute to
// get the player to the edges of the screen, with out any unnecessary
// calculating.
//
// .flynns > ul.the-grid > li.arcade > .arcade__player
.flynns {
  position: relative;

  @if $flynns-use-gutters {
    @media (min-width: $screen-sm) {
      padding: 0 ($flynns-gutter-value / 2);
    }

    @media (min-width: $screen-lg) {
      padding: 0 $flynns-gutter-value;
    }
  }
}

//
// Do not use the "position" property on me.
// See .flynns
//
.the-grid {
  @include clearfix;
  width: 100%;
  margin: 0 (-$flynns-cell-padding);
  padding: 0;
  list-style: none;

  & > li {
    float: left;
    padding: 0 $flynns-cell-padding ($flynns-cell-padding * 2);
    width: percentage((1 / 2));

    @media (min-width: $screen-sm-min) {
      width: percentage((1 / 3));
    }

    @media (min-width: $screen-md-min) {
      width: percentage((1 / 4));
    }

    // Calculate the multiplier for the space used up by the gutters.
    $multiplier: 100% / (100 - ($flynns-gutter-value * 2));

    // Shrink everything a bit more if we're using the catbus too.
    $offset: ($flynns-external-nav-offset / 2);

    $flynns-no-external-offset: true;
    @if $flynns-no-external-offset {
      $offset: 0;
    }

    // Loop through the sizes.
    @each $size in $flynns-thumbnail-small, $flynns-thumbnail-medium,
      $flynns-thumbnail-large {

      @if $size == $flynns-thumbnail-small {
        $size_name: "small";
      } @else if $size == $flynns-thumbnail-medium {
        $size_name: "medium";
      } @else {
        $size_name: "large";
      }

      .grid--#{$size_name} & {

        // Start with 5 columns, and go up from there.
        $cols: 5;
        @while $cols < 15 {

          $width: floor((($size * $cols) + $offset) * $multiplier);

          // We need to store the "start" of the grid change for the other sizes.
          @if $cols == 5 {
            @if $size == $flynns-thumbnail-medium {
              $flynns-medium-grid-start: $width;
            } @else if $size == $flynns-thumbnail-large {
              $flynns-large-grid-start: $width;
            }
          }

          // It's not going to "waste" CSS, but I don't think we need
          // much after the width of the apple 27" monitors.
          @if $width < 2560 {

            @media (min-width: $width) {
              width: percentage((1 / $cols));
            }
          }

          $cols: $cols + 1;
        } // @while

      }
    } // @each

  }
} // .the-grid

@import "arcades";

// @todo move somewhere else.
.flynns {

  // Title banner across the top of the grid.
  &__banner {
    @include display(flex);
    @include justify-content(space-between);
    @include align-items(flex-end);
    padding: 0 .5em;

    @media (min-width: $screen-sm) {
      padding: 0;
    }
  }

  &__title {
    @include flex(auto);
    @include ellipsis;

    @media (min-width: $screen-lg) {
      display: none;
    }
  }

  &__active {
    @include flex(none);
    text-align: right;

    @media (min-width: $screen-lg) {
      text-align: left;
    }
  }

  &__options {
    @include flex(none);
    font-size: 12px;
    text-align: right;

    @media (max-width: $screen-md-max) {
      display: none;
    }

    label {
      text-transform: uppercase;
    }

    .form-group + .form-group {
      margin-left: .5em;
    }

    .form-control-static {
      text-transform: uppercase;
      padding-bottom: 5px;
    }
  }
}
