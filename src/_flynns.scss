// @TODO CHANGES
// D: align spacers
// D: move special show to flag
// F: copy gradient from C
// All: shrink status flags over picture (line height 1)

// Screen Sizes
// These were stolen from bootstrap.
// Redefined here so they can be overridden as necessary.
// Added XL and 2X.
$screen-xs: 480px !default;
$screen-sm: 768px !default;
$screen-md: 992px !default;
$screen-lg: 1200px !default;
$screen-xl: 1550px !default;
$screen-2x: 1900px !default;


// Some of the arcades will check for a variable called $page-gradient.
// The default here is to make sure that `@if` doesn't fail for a variable
// not existing.
$include-page-gradient: true !default;

// Gutter Options: none, small, medium, large
$flynns-gutter-value: 5% !default;
$flynns-cell-padding: .2rem !default;
$flynns-external-nav-offset: 264px !default;


// Option for choosing the thumbnail display.
// * asteroids
// * battlezone
// * centipede
// * defender
// * excitebike
// * frogger
$flynns-arcade: asteroids !default;

// What font for the names
$flynns-font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !default;

// What color are the links (if other than white)?
$flynns-link-color: #09f !default;

// Status colors
$flynns-offline-bg: #222 !default;
$flynns-offline-color: white !default;

$flynns-online-bg: #3C0 !default;
$flynns-online-color: black !default;

$flynns-partychat-bg: #3C0 !default;
$flynns-partychat-color: black !default;

$flynns-goldshow-bg: gold !default;
$flynns-goldshow-color: black !default;

$flynns-special-bg: #09F !default;
$flynns-special-color: contrast-color($flynns-special-bg) !default;
$flynns-special-spacing: 3px;

// Thumbnail size.
// Options: medium, large
$flynns-thumbnail-size: medium !default;

$flynns-thumbnail-small: 160px !default;
$flynns-thumbnail-medium: 200px !default;
$flynns-thumbnail-large: 240px !default;

// Should the images hover?
$flynns-image-hover: true !default;

// Show the headlines?
$flynns-hide-headline: false !default;

// Show the drop shadow?
$flynns-show-dropshadow: true !default;
$flynns-arcade-dropshadow: 0 1px 1px rgba(0, 0, 0, 0.75) !default;

// Grid Gutter size.
// Options: small, medium, large, none (anything else)
$flynns-grid-spacing: small !default;

@mixin flynns_arrow($width, $height, $color) {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  @include triangle($width $height, $color, down);
  margin-left: -($width / 2);
}

// There are always exceptions to the rules. For some of the designs we have
// content in a white box. This mixin checks the background;
// If:
//    A: the background is white.
//    B: there is no gradient.
//    C: the grid spacing is not "none"
// Then:
//    No padding.
//
@mixin flynns_background_check() {
  @if rgba($body-bg, 1) == rgba(white, 1) {
    @if $include-page-gradient == false {
      @if $flynns-grid-spacing != none {
        @content;
      }
    }
  }
}

// The parent container. No position definitions are allowed between this
// class, and the player frame so that we can use position: absolute to
// get the player to the edges of the screen, with out any unnecessary
// calculating.
//
// .flynns > ul.the-grid > li.arcade > .arcade__player
.flynns {
  position: relative;

  @media (min-width: $screen-sm) {
    padding: 0 ($flynns-gutter-value / 2);
  }

  @media (min-width: $screen-lg) {
    padding: 0 $flynns-gutter-value;
  }

}

//
// Do not use the "position" property on me.
// See .flynns
//
.the-grid {
  @include clearfix;
  width: 100%;
  margin: 0 (-$flynns-cell-padding);
  padding: 0;
  list-style: none;

  & > li {
    float: left;
    padding: 0 $flynns-cell-padding ($flynns-cell-padding * 2);
    width: percentage((1 / 2));

    @media (min-width: $screen-sm-min) {
      width: percentage((1 / 3));
    }

    @media (min-width: $screen-md-min) {
      width: percentage((1 / 4));
    }

    // Calculate the multiplier for the space used up by the gutters.
    $multiplier: 100% / (100 - ($flynns-gutter-value * 2));

    // Loop through the sizes.
    @each $size in $flynns-thumbnail-small, $flynns-thumbnail-medium,
      $flynns-thumbnail-large {

      @if $size == $flynns-thumbnail-small {
        $size_name: "small";
      } @else if $size == $flynns-thumbnail-medium {
        $size_name: "medium";
      } @else {
        $size_name: "large";
      }

      .grid--#{$size_name} & {

        // Start with 5 columns, and go up from there.
        $cols: 5;
        @while $cols < 15 {

          $width: floor((($size * $cols) + ($flynns-external-nav-offset / 2)) * $multiplier);

          // It's not going to "waste" CSS, but I don't think we need
          // much after the width of the apple 27" monitors.
          @if $width < 2560 {

            @media (min-width: $width) {
              width: percentage((1 / $cols));
            }
          }

          $cols: $cols + 1;
        } // @while

      }
    } // @each

  }
} // .the-grid

@import "arcades";

// @todo move somewhere else.
.flynns {

  // Title banner across the top of the grid.
  &__banner {
    @include display(flex);
    @include justify-content(space-between);
    @include align-items(flex-end);
    padding: 0 .5em;

    @media (min-width: $screen-sm) {
      padding: 0;
    }
  }

  &__title {
    @include flex(auto);
    @include ellipsis;

    @media (min-width: $screen-lg) {
      display: none;
    }
  }

  &__active {
    @include flex(none);
    text-align: right;

    @media (min-width: $screen-lg) {
      text-align: left;
    }
  }

  &__options {
    @include flex(none);
    font-size: 12px;
    text-align: right;

    @media (max-width: $screen-md-max) {
      display: none;
    }

    label {
      text-transform: uppercase;
    }

    .form-group + .form-group {
      margin-left: .5em;
    }

    .form-control-static {
      text-transform: uppercase;
      padding-bottom: 5px;
    }
  }
}
}
