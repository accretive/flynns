// This is the basic structure of the arcade.
/*--------------------------------------------------------------------------+
|                                                                           |
|   li.arcade                                                               |
|                                                                           |
| +-----------------------------------------------------------------------+ |
| |                                                                       | |
| |   .arcade__cabinet                                                    | |
| |                                                                       | |
| | +-----------------------------------------------------------+ +-----+ | |
| | |                                                           | |     | | |
| | |   .arcade__display                                        | |  .  | | |
| | |                                                           | |  a  | | |
| | | +-------------------------------------------------+       | |  r  | | |
| | | |                                                 |       | |  c  | | |
| | | |   .arcade__static                               |       | |  a  | | |
| | | |                                                 |       | |  d  | | |
| | | | +-----------------------------------------------+-+     | |  e  | | |
| | | | |                                                 |     | |  _  | | |
| | | +-+   .aracde__screen                               |     | |  _  | | |
| | |   |                                                 |     | |  c  | | |
| | |   | +-----------------------------------------------+-+   | |  o  | | |
| | |   | |                                                 |   | |  n  | | |
| | |   +-+   .arcade__marquee                              |   | |  t  | | |
| | |     |                                                 |   | |  r  | | |
| | |     | +-----------------------------------------------+-+ | |  o  | | |
| | |     | |                                                 | | |  l  | | |
| | |     +-+   .arcade__game-over                            | | |  s  | | |
| | |       |                                                 | | |     | | |
| | |       |                                                 | | |     | | |
| | |       |                                                 | | |     | | |
| | |       +-------------------------------------------------+ | |     | | |
| | |                                                           | |     | | |
| | +-----------------------------------------------------------+ +-----+ | |
| |                                                                       | |
| +-----------------------------------------------------------------------+ |
|                                                                           |
| +-----------------------------------------------------------------------+ |
| |                                                                       | |
| |  .arcade__player                                                      | |
| |                                                                       | |
| +-----------------------------------------------------------------------+ |
|                                                                           |
+--------------------------------------------------------------------------*/


.arcade {
  //
  // Do not use the "position" property on me.
  // - See .flynns
  //


  // The wrapper
  &__cabinet {
    @if $DEBUG {
      background: rgba(lightsteelblue, 0.5);
    }
  }

  // Locked to a 4x3 ratio.
  &__display {
    position: relative;

    &::after {
      content: '';
      display: block;
      padding-top: 100% / (4 / 3);
      width: 100%;
    }

    // Or 16 x 9
    &.display--wide::after {
      padding-top: 100% / (16 / 9);
    }
  }

  // @TODO
  //
  // libsass "@extend" still doesn't work quite right, so I'm doing it this
  // way. Fix after bug is fixed.
  // https://github.com/sass/libsass/issues/146
  &__static, &__screen,
  &__marquee, &__game-over {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  &__static {
    z-index: 10;

    img {
      width: 100%;
      height: 100%;
      @include transition-property(transform);
      @include transition-duration(.15s);

      // All the images scale 1.5% on hover.
      a:hover & {
        @include transform(scale(1.015))
      }
    }
  }

  &__screen {
    z-index: 20;
  }

  &__marquee {
    z-index: 30;
    cursor: pointer;

    &:hover {
      text-decoration: none;
      color: inherit;
    }
  }

  &__game-over {
    z-index: 40;
    display: none;
  }

  &__player {
    will-change: height;
    @include transition(height .5s);
    @include clearfix;
    height: 0;

    .arcade--open & {
      height: 567px;
      margin-top: 1em;
    }

    @if $DEBUG {
      background: rgba(lightgreen, 0.5);
    }
  }

  &__name {
    h3 {
      font-size: 14px;
      margin: 0;
      letter-spacing: (10em / 1000);
    }
  }

  // .arcade__details
  &__details {
    ul {
      margin: 0;
      padding: 0;
      list-style: none;
    }

    li {
      display: inline-block;
      margin-right: 4px;

      &:last-child {
        margin-right: 0;
      }
    }
  }

  // .arcade__favorite
  &__favorite {
    color: red;
  }

  // .arcade__line
  &__line {

    // .arcade__line--alpha
    &--alpha {
      @include display(flex);
      @include flex-direction(row);
      @include align-items(flex-end);

      .arcade__name {
        @include flex(1 1 auto);
        line-height: 1.1;
      }

      .arcade__details {
        @include flex(0 1 auto);
        font-size: 14px;
        line-height: 1.1;
      }

      .hd, .phone {
        font-size: 75%;
      }
    }

    &--gamma {
      font-size: 10px;
      line-height: 12px;
      overflow: hidden;
    }
  }
}


// Only include the arcade that they're using.
@if $flynns-arcade == asteroids {
  @import "arcades/asteroids";

} @else if $flynns-arcade == battlezone {
  @import "arcades/battlezone";

} @else if $flynns-arcade == centipede {
  @import "arcades/centipede";

} @else if $flynns-arcade == defender {
  @import "arcades/defender";

} @else if $flynns-arcade == excitebike {
  @import "arcades/excitebike";

} @else if $flynns-arcade == frogger {
  @import "arcades/frogger";

}
