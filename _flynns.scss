@import "bower_components/neat/app/assets/stylesheets/neat";

// Screen Sizes
// These are defined in bootstrap.  Redefined here so they can be overridden
// as necessary.
$screen-xs: 480px !default;
$screen-sm: 768px !default;
$screen-md: 992px !default;
$screen-lg: 1200px !default;

// Grid Gutter size.
// values: none (anything), small, medium, large
$flynns-gutter-size: medium !default;

$flynns-gutter-none: 1000 !default;
$flynns-gutter-small: 20 !default;
$flynns-gutter-medium: 5 !default;
$flynns-gutter-large: 2 !default;

$flynns-arcade: battlezone !default;

// Default to no gutter, upgrade if necessary.
$flynns-gutter-value: $flynns-gutter-none;
@if $flynns-gutter-size == small {
  $flynns-gutter-value: $flynns-gutter-small;
} @else if $flynns-gutter-size == medium {
  $flynns-gutter-value: $flynns-gutter-medium;
} @else if $flynns-gutter-size == large {
  $flynns-gutter-value: $flynns-gutter-large;
}

// This takes in the number of total colums you want in the block, and the
// total number of columns you want to build the grid off of.  The larger the
// $total the smaller the space between the blocks.
@mixin flynns_pixel($columns, $total) {
  @include span-columns(($total / $columns) of $total);
  @include omega(#{$columns}n);
  margin-bottom: flex-gutter($total);
}

@mixin flynns_stretch {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.flynns {
  @include outer-container;
  max-width: 100%;

  & > li {
    // iPhone portrait
    @media (max-width: $screen-xs - 1) {
      @include flynns_pixel(2, 2 * $flynns-gutter-value);
    }

    // iPhone landscape -> iPad Portrait
    @media (min-width: $screen-xs) and (max-width: $screen-md - 1) {
      @include flynns_pixel(3, 3 * $flynns-gutter-value);
    }

    // > iPad landscape -> Small desktop
    @media (min-width: $screen-md) and (max-width: $screen-lg - 1 ) {
      @include flynns_pixel(4, 4 * $flynns-gutter-value);
    }

    @media (min-width: $screen-lg) {
      @include flynns_pixel(5, 5 * $flynns-gutter-value);
    }
  }
}

.arcade {

  // .arcade__cabinet
  // Houses the whole arcade mechanism
  &__cabinet {
    position: relative;

    &::after {
      content: '';
      display: block;
      padding-bottom: 75%;
      width: 100%;
    }
  }

  // .arcade__cover
  // This is just a giant cover over the whole cabinet area.  First in the
  // source so we can use the ~ selector for hovering.
  &__cover {
    @include flynns_stretch;
    z-index: 100;
  }


  // .arcade__marquee
  &__marquee {
    z-index: 50;
  }

  // .arcade__screen
  &__screen {
    @include flynns_stretch;
    z-index: 0;

    img {
      width: 100%;
      height: 100%;
    }
  }
}


// Only include the arcade that they're using.
@if $flynns-arcade == asteroids {
  @import "arcades/asteroids";

} @else if $flynns-arcade == battlezone {
  @import "arcades/battlezone";

} @else if $flynns-arcade == centipede {
  @import "arcades/centipede";

} @else if $flynns-arcade == defender {
  @import "arcades/defender";

} @else if $flynns-arcade == excitebike {
  @import "arcades/excitebike";

} @else if $flynns-arcade == frogger {
  @import "arcades/frogger";

}
