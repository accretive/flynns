@import "bower_components/neat/app/assets/stylesheets/neat";

// Screen Sizes
// These were stolen from bootstrap.
// Redefined here so they can be overridden as necessary.
$screen-xs: 480px !default;
$screen-sm: 768px !default;
$screen-md: 992px !default;
$screen-lg: 1200px !default;
$screen-xl: 1550px !default;
$screen-2x: 1900px !default;

// This is a basic breakdown of how the grid looks.  The number of elements
// per row, and the gutters between them can be customized.

/*--------------------------------------------------------------------------+
|                                                                           |
| section.flynns                                                            |
|                                                                           |
| +-----------------------------------------------------------------------+ |
| |                                                                       | |
| | ul.the-grid                                                           | |
| |                                                                       | |
| | +--------------------+  +--------------------+ +--------------------+ | |
| | |                    |  |                    | |                    | | |
| | | li.arcade          |  | li.arcade          | | li.arcade          | | |
| | |                    |  |                    | |                    | | |
| | +--------------------+  +--------------------+ +--------------------+ | |
| |                                                                       | |
| | +--------------------+  +--------------------+ +--------------------+ | |
| | |                    |  |                    | |                    | | |
| | | li.arcade          |  | li.arcade          | | li.arcade          | | |
| | |                    |  |                    | |                    | | |
| | +--------------------+  +--------------------+ +--------------------+ | |
| |                                                                       | |
| | +--------------------+  +--------------------+ +--------------------+ | |
| | |                    |  |                    | |                    | | |
| | | li.arcade          |  | li.arcade          | | li.arcade          | | |
| | |                    |  |                    | |                    | | |
| | +--------------------+  +--------------------+ +--------------------+ | |
| +-----------------------------------------------------------------------+ |
+--------------------------------------------------------------------------*/

// Are you trying to debug the arcade?
$flynns-debug: $DEBUG !default;

// Gutter Options: none, small, medium, large
$flynns-gutter-size: medium !default;

// Fine tuning the values.
$flynns-gutter-small: 44px !default;
$flynns-gutter-medium: 64px !default;
$flynns-gutter-large: 100px !default;

@if $flynns-gutter-size == small {
  $flynns-gutter-value: $flynns-gutter-small;

} @else if $flynns-gutter-size == medium {
  $flynns-gutter-value: $flynns-gutter-medium;

} @else if $flynns-gutter-size == large {
  $flynns-gutter-value: $flynns-gutter-large;
}

// Option for choosing the thumbnail display.
// * (a)steroids
// * (b)attlezone
// * (c)entipede
// * (d)efender
// * (e)xcitebike
// * (f)rogger
$flynns-arcade: asteroids !default;
$flynns-link-color: #0099ff !default;

// Thumbnail size.
// Options: small, medium, large
$flynns-thumbnail-size: medium !default;

// Grid Gutter size.
// Options: small, medium, large, none (anything else)
$flynns-grid-size: small !default;

// Fine tuning the values.
$flynns-grid-none: 1000;
$flynns-grid-small: 12 !default;
$flynns-grid-medium: 4 !default;
$flynns-grid-large: 1 !default;

// Default to no gutter, upgrade if necessary.
$flynns-grid-value: $flynns-grid-none;

@if $flynns-grid-size == small {
  $flynns-grid-value: $flynns-grid-small;

} @else if $flynns-grid-size == medium {
  $flynns-grid-value: $flynns-grid-medium;

} @else if $flynns-grid-size == large {
  $flynns-grid-value: $flynns-grid-large;
}

// This takes in the number of total colums you want in the block, and the
// total number of columns you want to build the grid off of.  The larger the
// $total the smaller the space between the blocks.
@mixin flynns_pixel($columns) {
  $total: $columns * $flynns-grid-value;

  max-width: 320px * ($columns);

  & > li {
    @include span-columns(($total / $columns) of $total);
    @include omega(#{$columns}n);
    margin-bottom: flex-gutter($total);

    &:nth-child(#{$columns}n + 1) {
      clear: both;
    }
  }

  & + .grid--admin {
    position: absolute;
    display: none;
    z-index: $columns;
  }
}

// The parent container. No position definitions are allowed between this
// class, and the player frame.
.flynns {
  position: relative;

  @media (min-width: $screen-lg) {
    padding: 0 $flynns-gutter-value;
  }
}

// The z-index here is set so that javascript can ask for the number of
// results per row, with out having to count, or have the breakpoints
// hard-coded somewhere else.
.the-grid {
  $size: $flynns-thumbnail-size;

  @include outer-container;
  max-width: 100%;
  margin: 0 auto;
  padding: 0;

  // iPhone portrait
  @media (max-width: $screen-xs - 1) {
    @include flynns_pixel(2);
  }

  // iPhone landscape -> iPad Portrait
  @media (min-width: $screen-xs) and (max-width: $screen-md - 1) {
    @if $flynns-thumbnail-size == large  { @include flynns_pixel(2); }
    @else { @include flynns_pixel(3); }
  }

  // iPad landscape -> Small desktop
  @media (min-width: $screen-md) and (max-width: $screen-lg - 1 ) {
    @if $size == large  { @include flynns_pixel(3); }
    @if $size == medium { @include flynns_pixel(4); }
    @if $size == small  { @include flynns_pixel(5); }
  }

  // Small desktops
  @media (min-width: $screen-lg) and (max-width: $screen-xl - 1) {
    @if $size == large  { @include flynns_pixel(4); }
    @if $size == medium { @include flynns_pixel(5); }
    @if $size == small  { @include flynns_pixel(6); }
  }

  @media (min-width: $screen-xl) and (max-width: $screen-2x - 1) {
    @if $size == large  { @include flynns_pixel(5); }
    @if $size == medium { @include flynns_pixel(6); }
    @if $size == small  { @include flynns_pixel(7); }
  }

  @media (min-width: $screen-2x) {
    @if $size == large  { @include flynns_pixel(6); }
    @if $size == medium { @include flynns_pixel(7); }
    @if $size == small  { @include flynns_pixel(8); }
  }
}

@import "arcades";
